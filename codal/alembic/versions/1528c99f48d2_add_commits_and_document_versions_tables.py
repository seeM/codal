"""add commits and document versions tables

Revision ID: 1528c99f48d2
Revises: 77361103c051
Create Date: 2023-06-17 15:12:05.199973

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "1528c99f48d2"
down_revision = "77361103c051"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "commits",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("repo_id", sa.Integer(), nullable=False),
        sa.Column("sha", sa.String(), nullable=False),
        sa.Column("message", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["repo_id"], ["repos.id"], name=op.f("fk_commits_repo_id_repos")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_commits")),
        sa.UniqueConstraint("repo_id", "sha", name=op.f("uq_commits_repo_id")),
    )
    op.create_table(
        "document_versions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("document_id", sa.Integer(), nullable=False),
        sa.Column("commit_id", sa.Integer(), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("num_tokens", sa.Integer(), nullable=False),
        sa.Column("processed", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["commit_id"],
            ["commits.id"],
            name=op.f("fk_document_versions_commit_id_commits"),
        ),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["documents.id"],
            name=op.f("fk_document_versions_document_id_documents"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_document_versions")),
        sa.UniqueConstraint(
            "document_id", "commit_id", name=op.f("uq_document_versions_document_id")
        ),
    )
    op.create_table(
        "document_version_chunks",
        sa.Column("document_version_id", sa.Integer(), nullable=False),
        sa.Column("chunk_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chunk_id"],
            ["chunks.id"],
            name=op.f("fk_document_version_chunks_chunk_id_chunks"),
        ),
        sa.ForeignKeyConstraint(
            ["document_version_id"],
            ["document_versions.id"],
            name=op.f(
                "fk_document_version_chunks_document_version_id_document_versions"
            ),
        ),
        sa.PrimaryKeyConstraint(
            "document_version_id", "chunk_id", name=op.f("pk_document_version_chunks")
        ),
    )
    op.drop_table("documents_chunks")
    with op.batch_alter_table("chunks", schema=None) as batch_op:
        batch_op.add_column(sa.Column("document_id", sa.Integer(), nullable=False))
        batch_op.create_foreign_key(
            batch_op.f("fk_chunks_document_id_documents"),
            "documents",
            ["document_id"],
            ["id"],
        )

    with op.batch_alter_table("documents", schema=None) as batch_op:
        batch_op.drop_constraint("uq_documents_repo_id", type_="unique")
        batch_op.create_unique_constraint(
            batch_op.f("uq_documents_repo_id"), ["repo_id", "path"]
        )
        batch_op.drop_column("text")
        batch_op.drop_column("processed")
        batch_op.drop_column("head")
        batch_op.drop_column("num_tokens")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("documents", schema=None) as batch_op:
        batch_op.add_column(sa.Column("num_tokens", sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column("head", sa.VARCHAR(), nullable=False))
        batch_op.add_column(sa.Column("processed", sa.BOOLEAN(), nullable=False))
        batch_op.add_column(sa.Column("text", sa.VARCHAR(), nullable=False))
        batch_op.drop_constraint(batch_op.f("uq_documents_repo_id"), type_="unique")
        batch_op.create_unique_constraint(
            "uq_documents_repo_id", ["repo_id", "path", "head"]
        )

    with op.batch_alter_table("chunks", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_chunks_document_id_documents"), type_="foreignkey"
        )
        batch_op.drop_column("document_id")

    op.create_table(
        "documents_chunks",
        sa.Column("document_id", sa.INTEGER(), nullable=False),
        sa.Column("chunk_id", sa.INTEGER(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chunk_id"], ["chunks.id"], name="fk_documents_chunks_chunk_id_chunks"
        ),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["documents.id"],
            name="fk_documents_chunks_document_id_documents",
        ),
        sa.PrimaryKeyConstraint("document_id", "chunk_id", name="pk_documents_chunks"),
    )
    op.drop_table("document_version_chunks")
    op.drop_table("document_versions")
    op.drop_table("commits")
    # ### end Alembic commands ###
